generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email              String  @unique
  hashedPassword     String
  hashedRefreshToken String?

  campaigns Campaigns[]

  @@map("users")
}

model Campaigns {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String

  channels Channels[]

  owner   Users  @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId String

  @@map("campaigns")
}

model Channels {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type     String
  text     String
  isActive Boolean

  keyboard Keyboard?

  campaign   Campaigns @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  campaignId String

  @@map("channels")
}

model Keyboard {
  id String @id @default(uuid())

  isInline Boolean
  buttons  Buttons[]

  channel   Channels @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId String   @unique

  @@map("keyboard")
}

model Buttons {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  isInlineButton Boolean
  isLinkButton   Boolean
  text           String
  link           String?

  keyboard   Keyboard @relation(fields: [keyboardId], references: [id], onDelete: Cascade)
  keyboardId String

  @@map("buttons")
}
